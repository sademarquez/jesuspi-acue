document.addEventListener('DOMContentLoaded', function () {
    // --- Elementos del DOM ---
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const header = document.getElementById('main-header');
    const sections = document.querySelectorAll('main section');
    const navLinks = document.querySelectorAll('.nav-link');
    const contentGrid = document.getElementById('content-grid');
    const filterButtons = document.querySelectorAll('.filter-btn');

    // --- Carrusel (Trayectoria) ---
    const carouselContainer = document.getElementById('carousel');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const carouselDotsContainer = document.getElementById('carousel-dots');
    let carouselItems = []; // Array para almacenar los items del carrusel
    let currentIndex = 0;
    let startX = 0; // Para el swipe en móviles
    let autoSlideInterval; // Para auto-avance

    // --- Funciones del Menú Móvil ---
    if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
            // Cambiar icono del botón si se desea
            // mobileMenuButton.innerHTML = mobileMenu.classList.contains('hidden') ? '<svg ... cruz >' : '<svg ... hamburguesa >';
        });
        document.querySelectorAll('#mobile-menu a').forEach(link => {
            link.addEventListener('click', () => {
                mobileMenu.classList.add('hidden');
            });
        });
    }

    // --- Efecto de Sombra en Header al hacer Scroll ---
    if (header) {
        window.addEventListener('scroll', () => {
            if (window.scrollY > 50) {
                header.classList.add('shadow-lg');
            } else {
                header.classList.remove('shadow-lg');
            }
        });
    }

    // --- Observador para animaciones de sección y navegación activa ---
    const observerOptions = {
        root: null, // Observa el viewport
        rootMargin: '0px',
        threshold: 0.4 // La sección es visible al 40%
    };

    const sectionObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible'); // Añadir clase 'visible' para animación de entrada

                // Actualizar enlace de navegación activo
                navLinks.forEach(link => {
                    link.classList.remove('active');
                    if (link.getAttribute('href').substring(1) === entry.target.id) {
                        link.classList.add('active');
                    }
                });
            } else {
                entry.target.classList.remove('visible'); // Opcional: remover clase 'visible' si sale de vista
            }
        });
    }, observerOptions);

    sections.forEach(section => {
        sectionObserver.observe(section);
    });

    // --- Carga dinámica de contenido y Lazy Loading para 'Pensamiento y Acción' ---
    let allContentData = []; // Para almacenar todos los datos cargados una vez

    if (contentGrid) {
        fetch('content.json') // Asegúrate de que la ruta sea correcta
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                allContentData = data; // Guarda todos los datos
                loadContent(data); // Carga el contenido inicial
            })
            .catch(error => {
                console.error('Error al cargar el contenido:', error);
                contentGrid.innerHTML = '<p class="text-center text-red-500">No se pudo cargar el contenido. Por favor, inténtalo de nuevo más tarde.</p>';
            });
    }

    function loadContent(dataToDisplay) {
        contentGrid.innerHTML = ''; // Limpiar grid
        const fragment = document.createDocumentFragment();

        dataToDisplay.forEach(item => {
            const card = document.createElement('div');
            card.className = `content-card opacity-0 transform translate-y-5 transition-all duration-500 delay-200 ${item.category}`; // Añadir clases para animación y filtro
            card.setAttribute('data-category', item.category);

            card.innerHTML = `
                <div class="bg-white rounded-lg shadow-lg overflow-hidden h-full flex flex-col">
                    <img data-src="${item.image}" 
                         onerror="this.onerror=null;this.src='https://placehold.co/600x400/E0DCD4/4A4441?text=${item.category.charAt(0).toUpperCase() + item.category.slice(1)}';" 
                         alt="Imagen representativa de un ${item.category}" 
                         class="w-full h-48 object-cover lazyload">
                    <div class="p-6 flex-grow flex flex-col justify-between">
                        <div>
                            <span class="inline-block bg-dark-gold text-white text-xs font-semibold px-3 py-1 rounded-full mb-2">${item.category.charAt(0).toUpperCase() + item.category.slice(1)}</span>
                            <h3 class="text-xl font-bold mb-2 text-deep-charcoal">${item.title}</h3>
                            <p class="text-deep-charcoal text-base mb-4">${item.description}</p>
                        </div>
                        <a href="${item.link}" class="inline-block text-dark-gold font-semibold hover:underline mt-auto">Leer Más &rarr;</a>
                    </div>
                </div>
            `;
            fragment.appendChild(card);
        });

        contentGrid.appendChild(fragment);

        // Observador para Lazy Loading de las tarjetas de contenido
        const contentCardObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target.querySelector('img.lazyload');
                    if (img && img.dataset.src) {
                        img.src = img.dataset.src;
                        img.classList.remove('lazyload');
                        img.removeAttribute('data-src');
                    }
                    entry.target.classList.add('visible'); // Para la animación de entrada de la tarjeta
                    observer.unobserve(entry.target); // Dejar de observar una vez cargada
                }
            });
        }, { threshold: 0.1 }); // Se activa cuando el 10% de la tarjeta es visible

        document.querySelectorAll('.content-card').forEach(card => {
            contentCardObserver.observe(card);
        });
    }

    // --- Filtros de contenido ---
    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            // Eliminar clase 'active' de todos los botones
            filterButtons.forEach(btn => btn.classList.remove('active', 'bg-dark-gold'));
            // Añadir clase 'active' al botón clicado
            button.classList.add('active', 'bg-dark-gold');
            button.classList.remove('bg-deep-charcoal'); // Asegura que el color de fondo cambie

            const category = button.dataset.category;
            const filteredData = category === 'all' ? allContentData : allContentData.filter(item => item.category === category);
            loadContent(filteredData);
        });
    });
    // Activar el botón "Todos" por defecto al cargar la página
    document.querySelector('.filter-btn[data-category="all"]').click();


    // --- Lógica del Carrusel (Trayectoria) ---
    const carouselContent = [
        { title: "Nacimiento", description: "Viene al mundo en el seno del pueblo Nasa, en el Cauca.", year: "1980", image: "https://placehold.co/800x450/4A4441/FBF8F0?text=1980" },
        { title: "Activismo Juvenil", description: "Inicia su participación en movimientos estudiantiles y comunitarios, forjando su liderazgo.", year: "1990s", image: "https://placehold.co/800x450/D4AF37/4A4441?text=1990s" },
        { title: "Liderazgo Comunitario", description: "Asume roles importantes en su comunidad, promoviendo la autonomía y el desarrollo.", year: "2000s", image: "https://placehold.co/800x450/8C7851/FBF8F0?text=2000s" },
        { title: "Incidencia Política Nacional", description: "Participa en foros y mesas de diálogo nacionales, defendiendo los derechos indígenas.", year: "2010s", image: "https://placehold.co/800x450/4A4441/FBF8F0?text=2010s" },
        { title: "Actualidad", description: "Continúa su incansable labor por la equidad, la interculturalidad y la justicia social en Colombia.", year: "Hoy", image: "https://placehold.co/800x450/D4AF37/4A4441?text=Hoy" }
    ];

    function initializeCarousel() {
        if (!carouselContainer) return; // Asegurarse de que el carrusel exista

        carouselContainer.innerHTML = '';
        carouselDotsContainer.innerHTML = '';
        carouselItems = [];

        carouselContent.forEach((item, index) => {
            const slide = document.createElement('div');
            slide.className = 'w-full flex-shrink-0';
            slide.innerHTML = `
                <div class="relative w-full h-96 md:h-[500px] bg-cover bg-center rounded-lg shadow-xl overflow-hidden" style="background-image: url('${item.image}');">
                    <div class="absolute inset-0 bg-deep-charcoal bg-opacity-60 flex items-center justify-center p-6">
                        <div class="text-center text-white">
                            <h3 class="text-3xl md:text-5xl font-bold mb-4 text-shadow">${item.title}</h3>
                            <p class="text-lg md:text-xl text-shadow">${item.description}</p>
                            <p class="text-xl md:text-2xl font-semibold mt-2 text-shadow">${item.year}</p>
                        </div>
                    </div>
                </div>
            `;
            carouselContainer.appendChild(slide);
            carouselItems.push(slide);

            const dot = document.createElement('button');
            dot.className = 'w-3 h-3 bg-gray-400 rounded-full hover:bg-dark-gold transition-colors duration-200';
            dot.addEventListener('click', () => {
                currentIndex = index;
                showSlide(currentIndex);
                resetAutoSlide();
            });
            carouselDotsContainer.appendChild(dot);
        });

        showSlide(currentIndex); // Mostrar el primer slide
        // startAutoSlide(); // Descomentar para auto-avance
    }

    function showSlide(index) {
        if (index >= carouselItems.length) currentIndex = 0;
        if (index < 0) currentIndex = carouselItems.length - 1;
        
        carouselContainer.style.transform = `translateX(-${currentIndex * 100}%)`;

        // Actualizar puntos de navegación
        carouselDotsContainer.querySelectorAll('button').forEach((dot, i) => {
            if (i === currentIndex) {
                dot.classList.add('bg-dark-gold');
                dot.classList.remove('bg-gray-400');
            } else {
                dot.classList.remove('bg-dark-gold');
                dot.classList.add('bg-gray-400');
            }
        });
    }

    function nextSlide() {
        currentIndex++;
        showSlide(currentIndex);
    }

    function prevSlide() {
        currentIndex--;
        showSlide(currentIndex);
    }

    if (prevBtn) prevBtn.addEventListener('click', () => { nextSlide(); resetAutoSlide(); }); // Intercambié next/prev para que coincida con el swipe intuitivo
    if (nextBtn) nextBtn.addEventListener('click', () => { prevSlide(); resetAutoSlide(); }); // Aquí también

    // --- Funcionalidad de Swipe para Carrusel (Móviles) ---
    if (carouselContainer) {
        carouselContainer.addEventListener('touchstart', (e) => {
            startX = e.touches[0].clientX;
            // stopAutoSlide(); // Detener auto-avance al iniciar el swipe
        });

        carouselContainer.addEventListener('touchend', (e) => {
            const endX = e.changedTouches[0].clientX;
            const diffX = startX - endX; // Diferencia de posición
            const swipeThreshold = 50; // Mínimo de píxeles para considerar un swipe

            if (diffX > swipeThreshold) {
                // Swipe a la izquierda (next slide)
                nextSlide();
            } else if (diffX < -swipeThreshold) {
                // Swipe a la derecha (prev slide)
                prevSlide();
            }
            // startAutoSlide(); // Reanudar auto-avance después del swipe
        });
    }
    
    // --- Auto-avance del Carrusel (Opcional) ---
    function startAutoSlide() {
        autoSlideInterval = setInterval(() => {
            nextSlide();
        }, 5000); // Cambia cada 5 segundos
    }

    function resetAutoSlide() {
        clearInterval(autoSlideInterval);
        // startAutoSlide();
    }

    // --- Inicialización ---
    initializeCarousel();
});

// Función para el desplazamiento suave para enlaces de anclaje
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const targetId = this.getAttribute('href').substring(1);
        const targetElement = document.getElementById(targetId);
        if (targetElement) {
            window.scrollTo({
                top: targetElement.offsetTop - (document.getElementById('main-header')?.offsetHeight || 0), // Ajusta por la altura del header fijo
                behavior: 'smooth'
            });
        }
    });
});
